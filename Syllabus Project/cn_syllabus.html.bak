<!DOCTYPE html><!DOCTYPE html>

<html><html lang="en">

<head><head>

    <title>Computer Networks Syllabus</title>  <meta charset="utf-8" />

    <style>  <meta name="viewport" content="width=device-width,initial-scale=1" />

        body {  <title>Computer Network - Syllabus</title>

            font-family: Arial, sans-serif;  <style>

            margin: 40px;    body{font-family:Inter,system-ui,Arial;padding:28px;background:#f7fbff;color:#071233}

            background-color: #f0f0f0;    .card{max-width:980px;margin:0 auto;background:#fff;padding:24px;border-radius:12px}

        }    h1{font-family:'Playfair Display',serif}

        .container {    .controls{display:flex;gap:8px;margin-bottom:10px}

            max-width: 800px;    button{background:#eef2ff;border:1px solid #e0e7ff;padding:8px 12px;border-radius:9px}

            margin: 0 auto;    .module{margin-bottom:16px}

            background-color: white;    ul{list-style:none;padding:0;margin-top:8px}

            padding: 20px;    li{padding:12px;border-radius:10px;border:1px solid #eef2ff;margin-bottom:8px;background:#fff}

            border-radius: 8px;    label{display:flex;gap:12px;align-items:flex-start}

            box-shadow: 0 2px 5px rgba(0,0,0,0.1);  </style>

        }</head>

        h1 {<body>

            color: #2c3e50;  <div class="card">

            text-align: center;    <h1>Computer Network <span class="badge">Syllabus</span></h1>

        }    <p>This page contains the Computer Network syllabus as a checklist.</p>

        .unit {    <div class="controls">

            margin-bottom: 20px;      <button id="markAll">Mark all</button>

            padding: 15px;      <button id="clearAll">Clear all</button>

            background-color: #f8f9fa;      <button id="export">Export</button>

            border-radius: 5px;      <button id="import">Import</button>

        }      <input id="importFile" type="file" accept="application/json" style="display:none" />

        .unit h2 {    </div>

            color: #3498db;

            margin-top: 0;    <div id="syllabusList"></div>

        }    <a href="index.html" style="margin-left: 10px; text-decoration: none; color: #3730a3;">← Back to Courses</a>

        .back-button {  </div>

            display: inline-block;

            padding: 10px 20px;  <script>

            background-color: #3498db;    const MODULES=[

            color: white;      {id:'cn1',title:'1 Introduction to Networking',hrs:4,topics:['Introduction to computer network','Network application','Network software and hardware components','Network topology','Protocol hierarchies','Design issues for the layers','Connection oriented and connectionless services','Reference models: Layer details of OSI and TCP/IP','Communication between layers']},

            text-decoration: none;      {id:'cn2',title:'2 Physical Layer',hrs:3,topics:['Introduction to Communication Electromagnetic Spectrum','Guided Transmission Media: Twisted pair','Coaxial','Fiber optics']},

            border-radius: 5px;      {id:'cn3',title:'3 Data Link Layer',hrs:8,topics:['DLL Design Issues: Services, Framing, Error Control, Flow Control','Error Detection and Correction: Hamming Code, CRC, Checksum','Elementary Data Link protocols: Stop and Wait, Sliding Window','Medium Access Control: Channel Allocation problem','Multiple access Protocols: Aloha, CSMA/CD']},

            margin-bottom: 20px;      {id:'cn4',title:'4 Network layer',hrs:12,topics:['Network Layer design issues','Communication Primitives: Unicast, Multicast, Broadcast','IPv4 Addressing (classful and classless)','Subnetting, Supernetting','IPv4 Protocol','Network Address Translation (NAT)','IPv6','Routing algorithms: Shortest Path (Dijkstra), Link state routing, Distance Vector Routing','Protocols - ARP,RARP, ICMP, IGMP','Congestion control algorithms','QoS parameters','Token & Leaky bucket algorithms']},

        }      {id:'cn5',title:'5 Transport Layer',hrs:6,topics:['Transport Service primitives','Berkeley Sockets','Connection management (Handshake)','UDP','TCP','TCP state transition','TCP timers','TCP Flow control (sliding Window)','TCP Congestion Control: Slow Start']},

        .back-button:hover {      {id:'cn6',title:'6 Application Layer',hrs:6,topics:['DNS: Name Space, Resource Record and Types of Name Server','HTTP','SMTP','Telnet','FTP','DHCP']}

            background-color: #2980b9;    ];

        }

    </style>    const STORAGE_KEY='cn_syllabus_v1';

</head>    function build(){const c=document.getElementById('syllabusList');MODULES.forEach(mod=>{const s=document.createElement('section');s.className='module';s.innerHTML=`<h3>${mod.title} (${String(mod.hrs).padStart(2,'0')} hrs)</h3>`;const ul=document.createElement('ul');mod.topics.forEach((t,i)=>{const id=`${mod.id}.t${i+1}`;const li=document.createElement('li');li.innerHTML=`<label><input data-id="${id}" type="checkbox"> <div><strong>${t.split(/[:\-–—]/)[0]}</strong><div style="color:#475569">${t}</div></div></label>`;ul.appendChild(li)});s.appendChild(ul);c.appendChild(s)})}

<body>    function load(){try{return JSON.parse(localStorage.getItem(STORAGE_KEY)||'{}')}catch(e){return{}}}

    <div class="container">    function save(s){localStorage.setItem(STORAGE_KEY,JSON.stringify(s))}

        <a href="index.html" class="back-button">← Back to Directory</a>    build();const inputs=Array.from(document.querySelectorAll('#syllabusList input[type=checkbox]'));

            const state=load();inputs.forEach(i=>{const id=i.dataset.id;if(state[id])i.checked=true;i.addEventListener('change',()=>{const s=load();s[id]=i.checked;save(s)})});

        <h1>Computer Networks Syllabus</h1>    document.getElementById('markAll').addEventListener('click',()=>{const s=load();inputs.forEach(i=>{i.checked=true;s[i.dataset.id]=true});save(s)});

    document.getElementById('clearAll').addEventListener('click',()=>{const s=load();inputs.forEach(i=>{i.checked=false;s[i.dataset.id]=false});save(s)});

        <div class="unit">    document.getElementById('export').addEventListener('click',()=>{const s=load();const blob=new Blob([JSON.stringify(s,null,2)],{type:'application/json'});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='cn_progress.json';a.click();URL.revokeObjectURL(url)});

            <h2>Unit 1: Network Fundamentals</h2>    document.getElementById('import').addEventListener('click',()=>document.getElementById('importFile').click());

            <ul>    document.getElementById('importFile').addEventListener('change',e=>{const f=e.target.files[0];if(!f)return;const r=new FileReader();r.onload=()=>{try{const obj=JSON.parse(r.result);localStorage.setItem(STORAGE_KEY,JSON.stringify(obj));location.reload()}catch(err){alert('Invalid JSON')}};r.readAsText(f)});

                <li>Introduction to Computer Networks</li>  </script>

                <li>Network Topologies</li></body>

                <li>OSI Model</li></html>
                <li>TCP/IP Protocol Suite</li>
            </ul>
        </div>

        <div class="unit">
            <h2>Unit 2: Data Link Layer</h2>
            <ul>
                <li>Error Detection and Correction</li>
                <li>Flow Control</li>
                <li>Multiple Access Protocols</li>
                <li>LAN Technologies</li>
            </ul>
        </div>

        <div class="unit">
            <h2>Unit 3: Network Layer</h2>
            <ul>
                <li>IP Addressing</li>
                <li>Subnetting</li>
                <li>Routing Protocols</li>
                <li>IPv4 vs IPv6</li>
            </ul>
        </div>

        <div class="unit">
            <h2>Unit 4: Transport Layer</h2>
            <ul>
                <li>TCP and UDP</li>
                <li>Connection Management</li>
                <li>Congestion Control</li>
                <li>Quality of Service</li>
            </ul>
        </div>

        <div class="unit">
            <h2>Unit 5: Application Layer</h2>
            <ul>
                <li>DNS</li>
                <li>Email Protocols</li>
                <li>HTTP and HTTPS</li>
                <li>Network Security Basics</li>
            </ul>
        </div>
    </div>
</body>
</html>