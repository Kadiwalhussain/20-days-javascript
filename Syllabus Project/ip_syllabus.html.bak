<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Internet Programming Syllabus</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #2563eb;
            --bg-color: #f8fafc;
            --text-color: #1e293b;
            --border-color: #e2e8f0;
            --hover-color: #3b82f6;
        }
        
        body {
            font-family: 'Inter', system-ui, -apple-system, sans-serif;
            margin: 0;
            padding: 2rem;
            background-color: var(--bg-color);
            color: var(--text-color);
            line-height: 1.6;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            background: white;
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        h1 {
            color: var(--primary-color);
            font-size: 2.25rem;
            margin-bottom: 2rem;
            font-weight: 700;
            text-align: center;
        }

        .controls {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            justify-content: center;
        }

        button {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

        button:hover {
            background-color: var(--hover-color);
        }

        .module {
            background: #f8fafc;
            border-radius: 0.75rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border: 1px solid var(--border-color);
        }

        .module h3 {
            color: var(--primary-color);
            margin-top: 0;
            font-size: 1.25rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .module h3 span {
            font-size: 0.875rem;
            background: var(--primary-color);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
        }

        ul {
            list-style: none;
            padding: 0;
            margin: 1rem 0 0 0;
        }

        li {
            background: white;
            padding: 1rem;
            border-radius: 0.5rem;
            margin-bottom: 0.75rem;
            border: 1px solid var(--border-color);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        li:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }

        label {
            display: flex;
            gap: 1rem;
            align-items: flex-start;
            cursor: pointer;
        }

        input[type="checkbox"] {
            width: 1.25rem;
            height: 1.25rem;
            margin-top: 0.25rem;
            cursor: pointer;
            accent-color: var(--primary-color);
        }

        .topic-content {
            flex: 1;
        }

        .topic-title {
            font-weight: 600;
            margin-bottom: 0.25rem;
        }

        .topic-description {
            color: #64748b;
            font-size: 0.925rem;
        }

        .back-link {
            display: inline-block;
            margin-top: 2rem;
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.2s ease;
        }

        .back-link:hover {
            color: var(--hover-color);
        }

        @media (max-width: 768px) {
            body {
                padding: 1rem;
            }

            .container {
                padding: 1.5rem;
            }

            h1 {
                font-size: 1.75rem;
            }

            .controls {
                flex-direction: column;
            }

            button {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Internet Programming Syllabus</h1>
        
        <div class="controls">
            <button id="markAll">Mark All Complete</button>
            <button id="clearAll">Clear All</button>
            <button id="export">Export Progress</button>
            <button id="import">Import Progress</button>
            <input id="importFile" type="file" accept="application/json" style="display:none"/>
        </div>

        <div id="syllabusList"></div>

        <a href="index.html" class="back-link">← Back to Courses</a>
    </div>

    <script>
        const MODULES = [
            {
                id: 'ip1',
                title: '1. Introduction to Web Technology',
                hrs: 10,
                topics: [
                    'Web Essentials: Clients, Servers, Communication',
                    'Basic Internet protocols',
                    'HTTP Request/Response',
                    'HTML5 fundamentals: syntax, tables, lists, images, controls, semantic elements, audio/video',
                    'CSS3 basics: cascading, backgrounds, colors, shadows, transformations, transitions, animation',
                    'Bootstrap basics'
                ]
            },
            {
                id: 'ip2',
                title: '2. Front End Development',
                hrs: 7,
                topics: [
                    'JavaScript introduction',
                    'DOM Manipulation',
                    'Date and Objects',
                    'Regular Expressions',
                    'Exception Handling',
                    'Form Validation',
                    'Event Handling',
                    'DHTML',
                    'JSON',
                    'HTTP Request'
                ]
            },
            {
                id: 'ip3',
                title: '3. Back End Development',
                hrs: 7,
                topics: [
                    'Servlets: Architecture & Life Cycle',
                    'Form GET and POST',
                    'Session Handling',
                    'Cookies',
                    'Apache Tomcat',
                    'Database Connectivity: JDBC',
                    'JSP and JSTL'
                ]
            },
            {
                id: 'ip4',
                title: '4. Rich Internet Application (RIA)',
                hrs: 4,
                topics: [
                    'RIA characteristics',
                    'AJAX basics',
                    'jQuery with AJAX'
                ]
            },
            {
                id: 'ip5',
                title: '5. Web Extension: PHP and XML',
                hrs: 6,
                topics: [
                    'XML DTD and Schema',
                    'DOM',
                    'XML Parsers: DOM & SAX',
                    'XSL',
                    'PHP basics: data types, control structures, built-in functions',
                    'PHP & MySQL connectivity'
                ]
            },
            {
                id: 'ip6',
                title: '6. React.js',
                hrs: 5,
                topics: [
                    'React features',
                    'Hello World application',
                    'JSX basics',
                    'Building simple applications'
                ]
            }
        ];

        const STORAGE_KEY = 'ip_syllabus_v1';

        function build() {
            const container = document.getElementById('syllabusList');
            MODULES.forEach(module => {
                const section = document.createElement('section');
                section.className = 'module';
                section.innerHTML = `
                    <h3>
                        ${module.title}
                        <span>${String(module.hrs).padStart(2, '0')} hrs</span>
                    </h3>
                `;

                const ul = document.createElement('ul');
                module.topics.forEach((topic, index) => {
                    const id = `${module.id}.t${index + 1}`;
                    const li = document.createElement('li');
                    li.innerHTML = `
                        <label>
                            <input data-id="${id}" type="checkbox">
                            <div class="topic-content">
                                <div class="topic-title">${topic.split(/[:\-–—]/)[0]}</div>
                                <div class="topic-description">${topic}</div>
                            </div>
                        </label>
                    `;
                    ul.appendChild(li);
                });
                section.appendChild(ul);
                container.appendChild(section);
            });
        }

        function load() {
            try {
                return JSON.parse(localStorage.getItem(STORAGE_KEY) || '{}');
            } catch (e) {
                return {};
            }
        }

        function save(state) {
            localStorage.setItem(STORAGE_KEY, JSON.stringify(state));
        }

        build();

        // Initialize checkboxes and add event listeners
        const inputs = Array.from(document.querySelectorAll('#syllabusList input[type=checkbox]'));
        const state = load();

        inputs.forEach(input => {
            const id = input.dataset.id;
            if (state[id]) input.checked = true;
            input.addEventListener('change', () => {
                const s = load();
                s[id] = input.checked;
                save(s);
            });
        });

        // Button handlers
        document.getElementById('markAll').addEventListener('click', () => {
            const s = load();
            inputs.forEach(input => {
                input.checked = true;
                s[input.dataset.id] = true;
            });
            save(s);
        });

        document.getElementById('clearAll').addEventListener('click', () => {
            const s = load();
            inputs.forEach(input => {
                input.checked = false;
                s[input.dataset.id] = false;
            });
            save(s);
        });

        document.getElementById('export').addEventListener('click', () => {
            const state = load();
            const blob = new Blob([JSON.stringify(state, null, 2)], {type: 'application/json'});
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'ip_progress.json';
            a.click();
            URL.revokeObjectURL(url);
        });

        document.getElementById('import').addEventListener('click', () => {
            document.getElementById('importFile').click();
        });

        document.getElementById('importFile').addEventListener('change', e => {
            const file = e.target.files[0];
            if (!file) return;
            
            const reader = new FileReader();
            reader.onload = () => {
                try {
                    const obj = JSON.parse(reader.result);
                    localStorage.setItem(STORAGE_KEY, JSON.stringify(obj));
                    location.reload();
                } catch (err) {
                    alert('Invalid JSON file');
                }
            };
            reader.readAsText(file);
        });
    </script>
</body>
</html>